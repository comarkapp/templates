exports.CoTest = function (e) {
    "use strict"; const c = ["src"], s = { class: "card-info" }, l = { class: "make-model" }, d = { class: "make-logo" }, r = ["src"], m = { key: 1 }, g = { class: "model-name" }, f = { class: "details-info" }, k = { class: "basie-info" }, h = { key: 0 }, y = { key: 1 };
    return ((t, o) => {
        const n = t.__vccOpts || t; for (const [i, a] of o) n[i] = a; return n
    })(e.defineComponent({ __name: "co-test", props: { utils: { type: Object, default: () => ({}) }, imgUrl: String, info: { type: Object, default: () => ({}) }, borderPadding: { type: [Number, String], default: 0 } }, setup(t) { const o = t, n = e.computed(() => o.info.ImageWidth < o.info.ImageHeight); return (i, a) => (e.openBlock(), e.createElementBlock("div", { class: e.normalizeClass(["tpl-card", { "is-horizontal": n.value }]) }, [e.createElementVNode("img", { class: "main-image", style: { display: "block", margin: "0 auto" }, src: t.imgUrl }, null, 8, c), e.createElementVNode("div", s, [e.createElementVNode("div", l, [e.createElementVNode("div", d, [t.utils.getMakeLogo(t.info.Make) ? (e.openBlock(), e.createElementBlock("img", { key: 0, src: t.utils.getMakeLogo(t.info.Make), alt: "" }, null, 8, r)) : (e.openBlock(), e.createElementBlock("span", m, e.toDisplayString(t.info.Make), 1))]), e.createElementVNode("div", g, e.toDisplayString(t.utils.getModelName(t.info.Model)), 1)]), e.createElementVNode("div", f, [e.createElementVNode("div", k, [e.createElementVNode("span", null, e.toDisplayString(t.info.FocalLength), 1), e.createElementVNode("span", null, e.toDisplayString(t.info.FNumber), 1), t.info.ExposureTime ? (e.openBlock(), e.createElementBlock("span", h, e.toDisplayString(t.info.ExposureTime) + "s", 1)) : e.createCommentVNode("", !0), t.info.ISOSpeedRatings ? (e.openBlock(), e.createElementBlock("span", y, "ISO" + e.toDisplayString(t.info.ISOSpeedRatings), 1)) : e.createCommentVNode("", !0)])])])], 2)) } }), [["__scopeId", "data-v-6e73fd1a"]])
}(Vue);
